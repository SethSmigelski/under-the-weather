function validateCoordinates(e,t){const n=parseFloat(e),a=parseFloat(t);return n>=-90&&n<=90&&a>=-180&&a<=180}function validateWeatherData(e){return e&&e.current&&e.daily&&Array.isArray(e.daily)&&e.daily.length>0}function displayWeather(e,t){const{style_set:n,display_mode:a,forecast_days:r,show_details:s,show_timestamp:o,show_unit:i}=under_the_weather_settings,d=t.dataset.locationName||"",c="Â°",l="metric"===e.units?"C":"F",h="metric"===e.units?"kph":"mph",u=i?`<span class="temp-unit">${l}</span>`:"";function p(e){return"weather_icons_font"===n?`<i class="wi ${e.icon_class}"></i>`:`<img src="${under_the_weather_plugin_url.url}images/default-weather-images-${e.icon}.png" alt="${e.description}">`}let w="";if("today_forecast"===a){const t=e.daily[0],n=Math.round(t.temp.max),a=Math.round(t.temp.min);w=`<div class="current-weather"><div class="today-forecast-temps"><div class="today-forecast-label">Today</div><div class="temps-wrapper"><span class="high">${n}${c}</span> / <span class="low">${a}${c}</span>${u}</div></div><div class="current-conditions">${p(t.weather[0])}<span>${t.weather[0].description}</span></div></div>`}else{const t=e.current;w=`<div class="current-weather"><div class="current-temp">${Math.round(t.temp)}${c}${u}</div><div class="current-conditions">${p(t.weather[0])}<span>${t.weather[0].description}</span></div></div>`}let v="";if(s){const t=Math.round(e.current.feels_like),n=Math.round(e.current.wind_speed),a=(f=e.current.wind_deg,["N","NNE","NE","ENE","E","ESE","SE","SSE","S","SSW","SW","WSW","W","WNW","NW","NNW"][Math.round(f/22.5)%16]),r=function(e){return`wi wi-wind from-${Math.round(e)}-deg`}(e.current.wind_deg);v=`<div class="weather-extra-details"><span>Feels like: ${t}${c}${u}</span><span class="wind-details"><i class="${r}"></i> ${a} ${n} ${h}</span></div>`}var f;const $=parseInt(r,10)||5,m=e.daily.slice(1,1+$);let g="";m.forEach((e=>{const t=new Date(1e3*e.dt).toLocaleDateString("en-US",{weekday:"short"}),n=Math.round(e.temp.max),a=Math.round(e.temp.min);g+=`<div class="forecast-day"><div class="forecast-day-name">${t}</div>${p(e.weather[0])}<div class="forecast-temps"><span class="high">${n}${c}</span> / <span class="low">${a}${c}</span></div></div>`}));let _="";o&&e.fetched_at&&(_=`<div class="last-updated">Updated ${function(e){const t=(new Date).getTime()/1e3,n=Math.floor(t-e);if(n<60)return"just now";let a=n/31536e3;return a>1?Math.floor(a)+" years ago":(a=n/2592e3,a>1?Math.floor(a)+" months ago":(a=n/86400,a>1?Math.floor(a)+" days ago":(a=n/3600,a>1?Math.floor(a)+" hours ago":(a=n/60,a>1?Math.floor(a)+" minutes ago":"a minute ago"))))}(e.fetched_at)}</div>`);const y=`<div class="weather-location-name">${d}</div>${w}${v}<div class="forecast-container">${g}</div>${_}`;t.innerHTML=y}document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector(".weather-widget");if(!e)return;const t=e.dataset.lat,n=e.dataset.lon,a=e.dataset.locationName,r=e.dataset.unit?e.dataset.unit.toLowerCase():"imperial",s=new AbortController,o=setTimeout((()=>s.abort()),1e4),i=under_the_weather_settings?.nonce;if(!i)return void(e.innerHTML="<p>Configuration error. Please refresh the page.</p>");if(!(t&&n&&a))return void(e.innerHTML="Location data is missing.");if(!validateCoordinates(t,n))return void(e.innerHTML="Invalid location coordinates.");e.innerHTML='<div class="weather-loading">Loading weather data...</div>';const d=`/wp-json/under-the-weather/v1/forecast?lat=${t}&lon=${n}&location_name=${encodeURIComponent(a)}&unit=${r}`;fetch(d,{signal:s.signal,headers:{"X-WP-Nonce":under_the_weather_settings.nonce}}).then((t=>{if(clearTimeout(o),!t.ok)throw t.text().then((t=>{console.error("Error fetching weather data:",t),e.innerHTML="<p>Could not retrieve forecast. Server error.</p>"})),new Error("Network response was not ok");return t.json()})).then((t=>{if(!validateWeatherData(t))throw new Error("The weather data structure is invalid");displayWeather(t,e)})).catch((t=>{console.error("Network Error:",t),e.innerHTML="<p>Unable to load weather data. Please try again later.</p>"}))}));
